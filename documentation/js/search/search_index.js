var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["app","auth","coverag","demo","descript","develop","e2","easi","framework","index","instal","installrun","licens","match","mit","mode","nest","nestj","npm","product","project","readm","repositori","result","run","start","start:dev","start:prodtest","starter","test","test:covlicens","test:e2","typescript","unit","us","watch"],"overview.html":["3","8","browser","class","inject","interfac","match","out","overview","reset","result","support","svg","zoom"],"modules.html":["match","modul","result"],"injectables/AuthenticationService.html":["_configservic","_jwtservic","_userservic","alreadi","async","authent","authenticationservic","authenticationservice.verifypassword(logindata.plaintextpassword","await","badrequestexcept","badrequestexception('invalid","badrequestexception('no","bcrypt","bcrypt.compare(plaintextpassword","catch","class","codes.enum","common/interfaces/user.interfac","configservic","conflictexcept","conflictexception('us","const","constructor","constructor(_userservic","constructor(priv","creat","createdus","createduser.password","createuserdto","creation","credenti","data","database/models/postgr","email","error","error?.cod","exist","export","fail","file","hash","hashedpassword","import","info","inject","internalservererrorexcept","internalservererrorexception(error","invalid","ispasswordmatch","jwt","jwtpayload","jwtservic","login","login(logindata","logindata","loginuserdto","match","method","models/dto/login","models/jwt","nestjs/common","nestjs/config","nestjs/jwt","new","null","occur","param","paramet","password","payload","payload.interfac","plain","plaintextpassword","postgreserrorcod","postgreserrorcode.uniqueviol","privat","process","promis","provid","public","readonli","regist","register(userdata","request","result","retriev","return","role","sourc","src/modules/authentication/authentication.service.t","static","string","text","this._jwtservices.sign(payload","this._userservice.createuser(userdata","this._userservice.findbyemail(logindata.email","this._userservice.findbyid(payload.userid","throw","token","tri","unauthorizedexcept","unauthorizedexception('invalid","unauthorizedexception('wrong","undefin","unexpect","user","user'","user.dto","user.id","user.password","user.rol","userdata","userid","users/models/dto/cr","users/users.servic","usersservic","valid","validateus","validateuser(payload","verifypassword","verifypassword(plaintextpassword","void","whether"],"injectables/JwtAuthGuard.html":["authguard","authguard('jwt","class","export","extend","file","import","info","inject","jwtauthguard","match","nestjs/common","nestjs/passport","result","sourc","src/modules/authentication/jwt.guard.t"],"injectables/JwtStrategy.html":["_authenticationservic","_configservic","_configservice.get('jwt_secret","_userservic","async","authentication.servic","authenticationservic","await","class","common/interfaces/user.interfac","configservic","constructor","constructor(_authenticationservic","export","extend","extractjwt","extractjwt.fromauthheaderasbearertoken","fals","file","ignoreexpir","import","info","inject","jwt","jwtfromrequest","jwtpayload","jwtstrategi","match","method","models/jwt","nestjs/common","nestjs/config","nestjs/passport","passport","passportstrategi","passportstrategy(strategi","payload.interfac","privat","promis","readonli","result","return","secretorkey","sourc","src/modules/authentication/jwt.strategy.t","strategi","super","this._authenticationservice.validateuser(payload","user","users/users.servic","usersservic","valid","validate(payload"],"injectables/LoggingMiddleware.html":["_logger","class","constructor","constructor(_logg","constructor(priv","export","file","implement","import","info","inject","logger","loggingmiddlewar","match","method","nestjs/common","nestmiddlewar","next","re","req.method","req.url","request","respons","result","return","sourc","src/middleware/logging.middleware.t","this._logger.debug(`${req.ip","us","use(req","void"],"injectables/RolesGuard.html":["boolean","canactiv","canactivate(context","class","common/interfaces/user.interfac","const","constructor","constructor(priv","constructor(reflector","context.gethandl","context.switchtohttp().getrequest","executioncontext","export","fals","file","implement","import","info","inject","match","method","nestjs/common","nestjs/cor","observ","promis","reflector","request","request.us","result","return","role","roles.includes(user.rol","rolesguard","rxj","sourc","src/modules/authentication/roles.guard.t","this.reflector.get('rol","true","user","userrol"],"injectables/UserDtoFactory.html":["class","common/interfaces/user.interfac","const","creat","create(id","createfromus","createfromuser(us","dto.factory.t","email","export","file","id","import","info","inject","match","method","models/dto/user.dto","nestjs/common","new","number","password","public","result","return","role","sourc","src/modules/users/factory/us","string","this.create(user.id","user","user.email","user.id","user.password","user.rol","userdto","userdtofactori","userrol","userrole.us"],"injectables/UserFactory.html":["class","const","creat","create(email","createfromdto","createfromdto(data","createuserdto","data.password","email","export","file","import","info","inject","match","method","models/dto/cr","models/user.ent","nestjs/common","new","password","public","result","return","sourc","src/modules/users/factory/user.factory.t","string","this.create(data.email","user","user.dto","user.email","user.password","userent","userfactori"],"injectables/UsersService.html":["_userfactori","_userrepo","ad","add","address","addus","adduser(us","async","await","badrequestexcept","badrequestexception('email","badrequestexception('id","badrequestexception('userdata","check","class","common/interfaces/user.interfac","const","constructor","constructor(_userrepo","creat","createdus","createus","createuser(userdata","createuserdto","data","defin","delet","deleteus","deleteuser(id","e","email","entiti","exist","export","factory/user.factori","file","findal","findbyemail","findbyemail(email","findbyid","findbyid(id","id","import","info","inject","injectrepositori","injectrepository(userent","isnan(id","isvalidid","isvalidid(id","list","mail","match","method","models/dto/cr","models/dto/user.dto","models/user.ent","nestjs/common","nestjs/typeorm","new","notfoundexcept","notfoundexception(`us","null","number","param","paramet","privat","promis","provid","public","readonli","repositori","result","return","sourc","src/modules/users/users.service.t","static","string","this._userfactory.createfromdto(userdata","this._userrepo.find","this._userrepo.findon","this._userrepo.findone(id","this._userrepo.remove(us","this._userrepo.save(us","this.adduser(createdus","throw","typeof","typeorm","updat","updateus","updateuser(id","user","user.dto","user.email","user.password","userdata","userdata.email","userdata.password","userdto","userent","userfactori","usersservic","usersservice.isvalidid(id","valid","void","whether"],"classes/CreateUserDto.html":["apiproperti","class","createuserdto","email","export","expos","file","import","info","isemail","isnotempti","isstr","match","nestjs/swagg","password","properti","public","result","sourc","src/modules/users/models/dto/cr","string","transform","user.dto.t","valid"],"classes/LoginUserDto.html":["apiproperti","class","email","export","file","import","info","isemail","isnotempti","isstr","loginuserdto","match","nestjs/swagg","plaintextpassword","properti","public","result","sourc","src/modules/authentication/models/dto/login","string","user.dto.t","valid"],"classes/UserDto.html":["apiproperti","class","common/interfaces/user.interfac","date","email","export","expos","file","id","import","info","isdat","isemail","isenum","isenum(userrol","isnotempti","isnumb","isstr","joindat","match","nestjs/swagg","number","password","properti","public","result","role","sourc","src/modules/users/models/dto/user.dto.t","string","transform","userdto","userrol","valid"],"interfaces/JwtPayload.html":["common/interfaces/user.interfac","export","file","import","info","interfac","jwtpayload","match","number","payload.interface.t","properti","result","role","sourc","src/modules/authentication/models/jwt","type","userid","userrol"],"interfaces/User.html":["administr","creationd","date","email","enum","export","file","id","info","interfac","match","moder","number","password","properti","result","role","sourc","src/modules/common/interfaces/user.interface.t","string","type","user","userrol"],"interfaces/UserRequest.html":["common/interfaces/user.interfac","export","express","extend","file","import","info","interfac","match","properti","request","request.interface.t","result","sourc","src/modules/authentication/models/us","type","user","userrequest"],"miscellaneous.html":["bootstrap","function","match","miscellan","mockedconfigservic","mockedjwtservic","result","return","role","variabl","void"],"coverage.html":["0","0/0","0/1","0/2","0/5","3/4","4/8","50","75","8","authenticationservic","class","coverag","createuserdto","document","dto.factory.t","file","identifi","inject","interfac","jwtauthguard","jwtpayload","jwtstrategi","loggingmiddlewar","loginuserdto","match","payload.interface.t","project","request.interface.t","result","rolesguard","src/middleware/logging.middleware.t","src/modules/authentication/authentication.service.t","src/modules/authentication/jwt.guard.t","src/modules/authentication/jwt.strategy.t","src/modules/authentication/models/dto/login","src/modules/authentication/models/jwt","src/modules/authentication/models/us","src/modules/authentication/roles.guard.t","src/modules/common/interfaces/user.interface.t","src/modules/users/factory/us","src/modules/users/factory/user.factory.t","src/modules/users/models/dto/cr","src/modules/users/models/dto/user.dto.t","src/modules/users/users.service.t","statement","type","user","user.dto.t","userdto","userdtofactori","userfactori","userrequest","usersservic"]},"length":19},"tokenStore":{"root":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.13793103448275862}},"/":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.04597701149425287}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.05747126436781609}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.022988505747126436}}},"docs":{}}},"3":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111}},"/":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"docs":{}}},"4":{"docs":{},"/":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"docs":{}}},"5":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"docs":{}},"7":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"docs":{}},"8":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}},"i":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.06},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.06818181818181818},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.06976744186046512}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.00906344410876133}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":5.006042296072508},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.037037037037037035},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.045454545454545456}},"(":{"docs":{},"'":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.045454545454545456}}}}}}}}}}}}}}},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.017902813299232736}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.015105740181268883},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.023017902813299233}}}}}},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.01818181818181818}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":10.011494252873563}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.011627906976744186},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.03125},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.024691358024691357}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.015105740181268883},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.046875},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.01278772378516624}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.024691358024691357},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}},"(":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625}}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.045454545454545456},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":5.08},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":5.068181818181818},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":5.046511627906977},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}}}}},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.046875}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.03125}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.00906344410876133},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0076726342710997444}},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.00906344410876133},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.04838709677419355},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0076726342710997444},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":5.04},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.02564102564102564}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.03225806451612903}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.02564102564102564}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.03225806451612903}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}},"d":{"docs":{"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.05454545454545454}}}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.015105740181268883}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.010230179028132993}},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.010230179028132993}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"g":{"docs":{},"r":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516}}}}}}}}}}}},"e":{"docs":{"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.023255813953488372},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.05454545454545454}}}}},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}},"e":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}},"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.038461538461538464},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.023017902813299233},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.06},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.06818181818181818},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.03488372093023256},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.05454545454545454}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106}},"?":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}}},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.02557544757033248}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.045454545454545456},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.02},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.022727272727272728},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.011627906976744186},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.03125},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.03636363636363636},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.03333333333333333}}}},"s":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.06},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.046511627906976744}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.03333333333333333}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.045454545454545456},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.03333333333333333}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.046875}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}},"u":{"docs":{},"m":{"docs":{"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.01818181818181818}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}}}},"l":{"docs":{},"s":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.045454545454545456},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.02},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.022727272727272728},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.011627906976744186},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.03125},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.01818181818181818},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.03333333333333333},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0076726342710997444}}}},"b":{"docs":{},"y":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.058823529411764705}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}},"l":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":5.009063444108762},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":5.136363636363637},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":5.037037037037037},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":5.066666666666666},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":5.046875},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":5.038461538461538},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":5.048387096774194},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":5.0076726342711},"coverage.html":{"ref":"coverage.html","tf":0.09195402298850575}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}},"y":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":5.0625},"interfaces/User.html":{"ref":"interfaces/User.html","tf":5.036363636363636},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":5.066666666666666},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.045454545454545456},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.02},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.022727272727272728},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.011627906976744186},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.03125},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.01818181818181818},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.03333333333333333}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.030211480362537766},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.09090909090909091},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.09876543209876543},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.0625},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.038461538461538464},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.04838709677419355},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.020460358056265986},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.06},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.045454545454545456},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.046511627906976744},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.03125},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.06666666666666667}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.00906344410876133}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.06},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.06818181818181818},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.06976744186046512}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.023255813953488372}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.04},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.045454545454545456},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.023255813953488372}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.011627906976744186}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.011627906976744186}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.04},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.045454545454545456},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.023255813953488372}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.023255813953488372}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}}}}}}}},"d":{"docs":{"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0792838874680307},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.03488372093023256},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.05454545454545454}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.00906344410876133}},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.00906344410876133},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":5.045454545454546},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.06666666666666667}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":5.044444444444444},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.038461538461538464},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.09090909090909091},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.024691358024691357},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.044444444444444446},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.03125},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.02564102564102564},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.03225806451612903},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.04},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.045454545454545456},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.023255813953488372},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.0625},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.03636363636363636},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.06666666666666667},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.11764705882352941},"coverage.html":{"ref":"coverage.html","tf":0.022988505747126436}}}}},"i":{"docs":{},"l":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.058823529411764}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.038461538461538464}},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}}}},"c":{"docs":{},"r":{"docs":{"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}}}}}}},"r":{"docs":{"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.01818181818181818}}}},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":10.2}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.11764705882352941}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.11764705882352941}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.045454545454545456},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}},"r":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.045454545454545456},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.02},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.022727272727272728},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.011627906976744186}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.044444444444444446}}}}}}}}}}}}},"w":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.030211480362537766},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.028132992327365727}}},"x":{"docs":{},"t":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.06666666666666667}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.1346153846153846}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.00906344410876133},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.01278772378516624}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.02564102564102564},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.03324808184143223},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.023255813953488372},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.09375},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.05454545454545454}}}}}}},"o":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.01278772378516624}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"`":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.010230179028132993}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.00906344410876133},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.017902813299232736}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.02},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.022727272727272728},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.011627906976744186},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.03125},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.01818181818181818},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.03333333333333333}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.037037037037037035},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.010230179028132993}}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.015105740181268883},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.020460358056265986}},"e":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.017902813299232736}}}}}}},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.01812688821752266},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.038461538461538464},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.04838709677419355},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.06},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.03488372093023256},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.05454545454545454}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}},"y":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.030211480362537766}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.03125},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.06818181818181818}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.01812688821752266},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.05128205128205128},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.06451612903225806},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.03580562659846547},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.08},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.09090909090909091},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.11627906976744186}}}}}}}},"r":{"docs":{},"e":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.044444444444444446}},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.00906344410876133},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.037037037037037035},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.01278772378516624}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.038461538461538464},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.09090909090909091},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.024691358024691357},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.044444444444444446},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.03125},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.02564102564102564},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.03225806451612903},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.04},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.045454545454545456},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.023255813953488372},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.0625},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.03636363636363636},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.06666666666666667},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.11764705882352941},"coverage.html":{"ref":"coverage.html","tf":0.022988505747126436}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223}}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.06666666666666667}},".":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.03333333333333333},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.04229607250755287},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.024691358024691357},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.0625},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.05128205128205128},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.06451612903225806},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.05370843989769821},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.058823529411764705}}}}}},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.0625}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.11538461538461539}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.03125},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.038461538461538464},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.03488372093023256},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.09375},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.05454545454545454},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.11764705882352941}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":5.03125},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}},"x":{"docs":{},"j":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.05128205128205128},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.06451612903225806},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.08},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.09090909090909091},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.046511627906976744},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.10909090909090909}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.045454545454545456},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.02},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.022727272727272728},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.011627906976744186},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.03125},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.01818181818181818},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.03333333333333333}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.045454545454545456},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.022727272727272728},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.03125},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}},"u":{"docs":{},"s":{"docs":{"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.03333333333333333},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"c":{"docs":{},"r":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.02},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.01818181818181818},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.07692307692307693}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}}}}}}}},"e":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}},"docs":{}}}}},"x":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.0625},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.09090909090909091},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.03333333333333333},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}}}}},"o":{"docs":{},"f":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}},"r":{"docs":{},"m":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"b":{"docs":{},"y":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}},"o":{"docs":{},"n":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0076726342710997444}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"(":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},".":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.04833836858006042},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.043478260869565216}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}},"r":{"docs":{},"i":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}}},"u":{"docs":{},"e":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.02},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.011627906976744186}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223}},"e":{"docs":{},"r":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.06646525679758308},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.03125},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.0641025641025641},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.03225806451612903},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.10997442455242967},"interfaces/User.html":{"ref":"interfaces/User.html","tf":5.054545454545455},"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":0.23333333333333334},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"'":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106}}},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}},".":{"docs":{},"t":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.02},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.022727272727272728},"coverage.html":{"ref":"coverage.html","tf":0.022988505747126436}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.02564102564102564},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.02564102564102564}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.02564102564102564},"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.016129032258064516},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.020460358056265986}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.07692307692307693},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0076726342710997444},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":5.023255813953488},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":5.0256410256410255},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.09375}}}},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.00906344410876133},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.037037037037037035},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":5.005115089514066},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0076726342710997444}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625},"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.038461538461538464},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.03488372093023256},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":0.125},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.07272727272727272}},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserDtoFactory.html":{"ref":"injectables/UserDtoFactory.html","tf":0.01282051282051282}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/UserRequest.html":{"ref":"interfaces/UserRequest.html","tf":5.066666666666666},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":0.0967741935483871},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/UserFactory.html":{"ref":"injectables/UserFactory.html","tf":5.032258064516129},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0076726342710997444},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.044444444444444446}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0076726342710997444}}}}}}}}},"b":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}}}}}},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.01278772378516624}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}},"d":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0076726342710997444}}}},"n":{"docs":{},"o":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.015625}}}}}},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.11764705882352941}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.055555555555555}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/RolesGuard.html":{"ref":"injectables/RolesGuard.html","tf":0.03125}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.024691358024691357}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.024691358024691357}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.005115089514066497}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.022222222222222223}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.015105740181268883}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.02416918429003021},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.012084592145015106},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.037037037037037035},"interfaces/JwtPayload.html":{"ref":"interfaces/JwtPayload.html","tf":5.0625},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.00906344410876133}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":5.0246913580246915},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":5.090909090909091},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.03488372093023256}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.00906344410876133},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.012345679012345678},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.010230179028132993},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.02},"classes/LoginUserDto.html":{"ref":"classes/LoginUserDto.html","tf":0.022727272727272728},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.011627906976744186}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}}}}}}}}}}}}}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.024691358024691357}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.058823529411764705}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764}},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.006042296072507553}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthenticationService.html":{"ref":"injectables/AuthenticationService.html","tf":0.0030211480362537764},"injectables/LoggingMiddleware.html":{"ref":"injectables/LoggingMiddleware.html","tf":0.06666666666666667},"injectables/UsersService.html":{"ref":"injectables/UsersService.html","tf":0.0025575447570332483},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.058823529411764705}}}}}}},"length":699},"corpusTokens":["0","0/0","0/1","0/2","0/5","3","3/4","4/8","50","75","8","_authenticationservic","_configservic","_configservice.get('jwt_secret","_jwtservic","_logger","_userfactori","_userrepo","_userservic","ad","add","address","addus","adduser(us","administr","alreadi","apiproperti","app","async","auth","authent","authentication.servic","authenticationservic","authenticationservice.verifypassword(logindata.plaintextpassword","authguard","authguard('jwt","await","badrequestexcept","badrequestexception('email","badrequestexception('id","badrequestexception('invalid","badrequestexception('no","badrequestexception('userdata","bcrypt","bcrypt.compare(plaintextpassword","boolean","bootstrap","browser","canactiv","canactivate(context","catch","check","class","codes.enum","common/interfaces/user.interfac","configservic","conflictexcept","conflictexception('us","const","constructor","constructor(_authenticationservic","constructor(_logg","constructor(_userrepo","constructor(_userservic","constructor(priv","constructor(reflector","context.gethandl","context.switchtohttp().getrequest","coverag","creat","create(email","create(id","createdus","createduser.password","createfromdto","createfromdto(data","createfromus","createfromuser(us","createus","createuser(userdata","createuserdto","creation","creationd","credenti","data","data.password","database/models/postgr","date","defin","delet","deleteus","deleteuser(id","demo","descript","develop","document","dto.factory.t","e","e2","easi","email","entiti","enum","error","error?.cod","executioncontext","exist","export","expos","express","extend","extractjwt","extractjwt.fromauthheaderasbearertoken","factory/user.factori","fail","fals","file","findal","findbyemail","findbyemail(email","findbyid","findbyid(id","framework","function","hash","hashedpassword","id","identifi","ignoreexpir","implement","import","index","info","inject","injectrepositori","injectrepository(userent","instal","installrun","interfac","internalservererrorexcept","internalservererrorexception(error","invalid","isdat","isemail","isenum","isenum(userrol","isnan(id","isnotempti","isnumb","ispasswordmatch","isstr","isvalidid","isvalidid(id","joindat","jwt","jwtauthguard","jwtfromrequest","jwtpayload","jwtservic","jwtstrategi","licens","list","logger","loggingmiddlewar","login","login(logindata","logindata","loginuserdto","mail","match","method","miscellan","mit","mockedconfigservic","mockedjwtservic","mode","models/dto/cr","models/dto/login","models/dto/user.dto","models/jwt","models/user.ent","moder","modul","nest","nestj","nestjs/common","nestjs/config","nestjs/cor","nestjs/jwt","nestjs/passport","nestjs/swagg","nestjs/typeorm","nestmiddlewar","new","next","notfoundexcept","notfoundexception(`us","npm","null","number","observ","occur","out","overview","param","paramet","passport","passportstrategi","passportstrategy(strategi","password","payload","payload.interfac","payload.interface.t","plain","plaintextpassword","postgreserrorcod","postgreserrorcode.uniqueviol","privat","process","product","project","promis","properti","provid","public","re","readm","readonli","reflector","regist","register(userdata","repositori","req.method","req.url","request","request.interface.t","request.us","reset","respons","result","retriev","return","role","roles.includes(user.rol","rolesguard","run","rxj","secretorkey","sourc","src/middleware/logging.middleware.t","src/modules/authentication/authentication.service.t","src/modules/authentication/jwt.guard.t","src/modules/authentication/jwt.strategy.t","src/modules/authentication/models/dto/login","src/modules/authentication/models/jwt","src/modules/authentication/models/us","src/modules/authentication/roles.guard.t","src/modules/common/interfaces/user.interface.t","src/modules/users/factory/us","src/modules/users/factory/user.factory.t","src/modules/users/models/dto/cr","src/modules/users/models/dto/user.dto.t","src/modules/users/users.service.t","start","start:dev","start:prodtest","starter","statement","static","strategi","string","super","support","svg","test","test:covlicens","test:e2","text","this._authenticationservice.validateuser(payload","this._jwtservices.sign(payload","this._logger.debug(`${req.ip","this._userfactory.createfromdto(userdata","this._userrepo.find","this._userrepo.findon","this._userrepo.findone(id","this._userrepo.remove(us","this._userrepo.save(us","this._userservice.createuser(userdata","this._userservice.findbyemail(logindata.email","this._userservice.findbyid(payload.userid","this.adduser(createdus","this.create(data.email","this.create(user.id","this.reflector.get('rol","throw","token","transform","tri","true","type","typeof","typeorm","typescript","unauthorizedexcept","unauthorizedexception('invalid","unauthorizedexception('wrong","undefin","unexpect","unit","updat","updateus","updateuser(id","us","use(req","user","user'","user.dto","user.dto.t","user.email","user.id","user.password","user.rol","userdata","userdata.email","userdata.password","userdto","userdtofactori","userent","userfactori","userid","userrequest","userrol","userrole.us","users/models/dto/cr","users/users.servic","usersservic","usersservice.isvalidid(id","valid","validate(payload","validateus","validateuser(payload","variabl","verifypassword","verifypassword(plaintextpassword","void","watch","whether","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nEasy Auth\nthis is a Demo-Project using nestJS\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development$ npm run start# watch mode$ npm run start:dev# production mode$ npm run start:prodTest\n# unit tests$ npm run test# e2e tests$ npm run test:e2e# test coverage$ npm run test:covLicense\n  This project is is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        8 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/authentication/authentication.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(_userService: UsersService, _jwtServices: JwtService, _configService: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public register\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    register(userData: CreateUserDto)\n                                \n                            \n            \n                            \n                                \n                                        creates a new user\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                userData\n                                                            \n                                                            \n                                                                \n            data for the user\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public login\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    login(loginData: LoginUserDto)\n                                \n                            \n            \n                            \n                                \n                                        authenticates the user and returns a JWT\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                loginData\n                                                            \n                                                            \n                                                                \n            login credentials for the user\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public validateUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validateUser(payload: JwtPayload)\n                                \n                            \n            \n                            \n                                \n                                        validates the JWT Payload and retrieves the User\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                payload\n                                                            \n                                                            \n                                                                \n            JWT Payload\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private verifyPassword\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                plainTextPassword\n                                                            \n                                                            \n                                                                \n            the user's password in plain text\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                hashedPassword\n                                                            \n                                                            \n                                                                \n            the user's hashed password\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {\r\n  BadRequestException,\r\n  ConflictException,\r\n  Injectable,\r\n  InternalServerErrorException,\r\n  UnauthorizedException,\r\n} from '@nestjs/common';\r\nimport { CreateUserDto } from '../users/models/dto/create-user.dto';\r\nimport { UsersService } from '../users/users.service';\r\nimport * as bcrypt from 'bcrypt';\r\nimport { PostgresErrorCode } from '../database/models/postgres-error-codes.enum';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { JwtPayload } from './models/jwt-payload.interface';\r\nimport { LoginUserDto } from './models/dto/login-user.dto';\r\nimport { User } from '../common/interfaces/user.interface';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n  constructor(private readonly _userService: UsersService, private readonly _jwtServices: JwtService, private readonly _configService: ConfigService) {}\r\n  \r\n  /**\r\n   * creates a new user\r\n   * @param userData - data for the user\r\n   * @return the created user\r\n   * @throws BadRequestException userData is null\r\n   * @throws ConflictException user with email already exists\r\n   * @throws InternalServerErrorException user creation fails\r\n   */\r\n  public async register(userData: CreateUserDto): Promise {\r\n    if (!userData) {\r\n      throw new BadRequestException('no user data provided');\r\n    }\r\n    try {\r\n      const createdUser = await this._userService.createUser(userData);\r\n      createdUser.password = undefined;\r\n      return createdUser;\r\n    } catch (error) {\r\n      if (error?.code === PostgresErrorCode.UniqueViolation) {\r\n        throw new ConflictException('User with that email already exists');\r\n      }\r\n      throw new InternalServerErrorException(error, 'An unexpected error occurred while processing the request');\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * authenticates the user and returns a JWT\r\n   * @param loginData - login credentials for the user\r\n   * @return JWT for the user\r\n   * @throws BadRequestException loginData is null\r\n   * @throws UnauthorizedException credential validation fails\r\n   */\r\n  public async login(loginData: LoginUserDto): Promise {\r\n    if (!loginData) {\r\n      throw new BadRequestException('no user data provided');\r\n    }\r\n    try {\r\n      const user = await this._userService.findByEmail(loginData.email);\r\n      await AuthenticationService.verifyPassword(loginData.plainTextPassword, user.password);\r\n      const payload: JwtPayload = { userId: user.id, role: user.role };\r\n      return this._jwtServices.sign(payload);\r\n    } catch (error) {\r\n      throw new UnauthorizedException('Wrong credentials provided');\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * validates the JWT Payload and retrieves the User\r\n   * @param payload - JWT Payload\r\n   * @return the authenticated user\r\n   * @throws BadRequestException payload is null\r\n   * @throws UnauthorizedException JWT is invalid\r\n   */\r\n  public async validateUser(payload: JwtPayload): Promise {\r\n    if (!payload) {\r\n      throw new BadRequestException('invalid payload');\r\n    }\r\n    const user = await this._userService.findById(payload.userId);\r\n    if (!user) {\r\n      throw new UnauthorizedException('Invalid token');\r\n    }\r\n    return user;\r\n  }\r\n  \r\n  /**\r\n   * @param plainTextPassword - the user's password in plain text\r\n   * @param hashedPassword - the user's hashed password\r\n   * @return whether the passwords match\r\n   * @throws UnauthorizedException passwords do not match\r\n   */\r\n  private static async verifyPassword(plainTextPassword: string, hashedPassword: string) {\r\n    const isPasswordMatching = await bcrypt.compare(plainTextPassword, hashedPassword);\r\n    if (!isPasswordMatching) {\r\n      throw new UnauthorizedException('Wrong credentials provided');\r\n    }\r\n    return isPasswordMatching;\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/authentication/jwt.guard.ts\n        \n\n\n\n\n    \n    \n        import { AuthGuard } from '@nestjs/passport';\r\nimport { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/authentication/jwt.strategy.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(_authenticationService: AuthenticationService, _configService: any, _userService: UsersService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     validate\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validate(payload: JwtPayload)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { PassportStrategy } from '@nestjs/passport';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { JwtPayload } from './models/jwt-payload.interface';\r\nimport { UsersService } from '../users/users.service';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { User } from '../common/interfaces/user.interface';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor(\r\n    private readonly _authenticationService: AuthenticationService,\r\n    private readonly _configService: ConfigService,\r\n    private readonly _userService: UsersService,\r\n  ) {\r\n    super({\r\n      ignoreExpiration: false,\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      secretOrKey: _configService.get('JWT_SECRET'),\r\n    });\r\n  }\r\n  async validate(payload: JwtPayload): Promise {\r\n    return await this._authenticationService.validateUser(payload);\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingMiddleware.html":{"url":"injectables/LoggingMiddleware.html","title":"injectable - LoggingMiddleware","body":"\n                   \n\n\n\n\n\n  Injectables\n  LoggingMiddleware\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/logging.middleware.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(_logger: Logger)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     use\n                                \n                            \n            \n                            \n                                \n            use(req: any, res: any, next: () => void)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\n\n@Injectable()\nexport class LoggingMiddleware implements NestMiddleware {\n  constructor(private _logger: Logger) {}\n\n  use(req: Request | any, res: Response, next: () => void) {\n    this._logger.debug(`${req.ip}: ${req.method} ${req.url}`);\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesGuard.html":{"url":"injectables/RolesGuard.html","title":"injectable - RolesGuard","body":"\n                   \n\n\n\n\n\n  Injectables\n  RolesGuard\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/authentication/roles.guard.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(reflector: Reflector)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     canActivate\n                                \n                            \n            \n                            \n                                \n            canActivate(context: ExecutionContext)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\r\nimport { Observable } from 'rxjs';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { UserRole } from '../common/interfaces/user.interface';\r\n\r\n@Injectable()\r\nexport class RolesGuard implements CanActivate {\r\n  constructor(private reflector: Reflector) {}\r\n\r\n  canActivate(context: ExecutionContext): boolean | Promise | Observable {\r\n    const roles = this.reflector.get('roles', context.getHandler());\r\n    if (!roles) {\r\n      return true;\r\n    }\r\n    const request = context.switchToHttp().getRequest();\r\n    const user = request.user;\r\n    if (!user) {\r\n      return false;\r\n    }\r\n    return roles.includes(user.role);\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserDtoFactory.html":{"url":"injectables/UserDtoFactory.html","title":"injectable - UserDtoFactory","body":"\n                   \n\n\n\n\n\n  Injectables\n  UserDtoFactory\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/factory/user-dto.factory.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public create\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    create(id: number, email: string, password: string, role: UserRole)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     UserDto\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public createFromUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createFromUser(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     UserDto\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\r\nimport { UserDto } from '../models/dto/user.dto';\r\nimport { User, UserRole } from '../../common/interfaces/user.interface';\r\n\r\n@Injectable()\r\nexport class UserDtoFactory {\r\n  public create(id: number, email: string, password: string, role: UserRole = UserRole.User): UserDto {\r\n    const user = new UserDto();\r\n    user.id = id;\r\n    user.email = email;\r\n    user.password = password;\r\n    user.role = role;\r\n    return user;\r\n  }\r\n\r\n  public createFromUser(user: User): UserDto {\r\n    return this.create(user.id, user.email, user.password, user.role);\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFactory.html":{"url":"injectables/UserFactory.html","title":"injectable - UserFactory","body":"\n                   \n\n\n\n\n\n  Injectables\n  UserFactory\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/factory/user.factory.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public createFromDto\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createFromDto(data: CreateUserDto)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     UserEntity\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public create\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    create(email: string, password: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     UserEntity\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\r\nimport { CreateUserDto } from '../models/dto/create-user.dto';\r\nimport { UserEntity } from '../models/user.entity';\r\n\r\n@Injectable()\r\nexport class UserFactory {\r\n  public createFromDto(data: CreateUserDto): UserEntity {\r\n    return this.create(data.email, data.password);\r\n  }\r\n\r\n  public create(email: string, password: string): UserEntity {\r\n    const user = new UserEntity();\r\n    user.email = email;\r\n    user.password = password;\r\n    return user;\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(_userRepo: Repository, _userFactory: UserFactory)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public findAll\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    findAll()\n                                \n                            \n            \n                            \n                                \n                                        \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public findById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    findById(id: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                \n            ID of the user\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public findByEmail\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    findByEmail(email: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                email\n                                                            \n                                                            \n                                                                \n            E-Mail address of the user\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public updateUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    updateUser(id: number, userData: UserDto)\n                                \n                            \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                \n            the user ID\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                userData\n                                                            \n                                                            \n                                                                \n            the updated user data\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public createUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createUser(userData: CreateUserDto)\n                                \n                            \n            \n                            \n                                \n                                        creates a new user\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                userData\n                                                            \n                                                            \n                                                                \n            the data for the user\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public deleteUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteUser(id: number)\n                                \n                            \n            \n                            \n                                \n                                        deletes a existing user\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                \n            ID of the user to be deleted\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public addUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    addUser(user: User)\n                                \n                            \n            \n                            \n                                \n                                        adds a user to the repository\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                user\n                                                            \n                                                            \n                                                                \n            the user to be added\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private isValidId\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    isValidId(id: number)\n                                \n                            \n            \n                            \n                                \n                                        checks whether the provided id is valid\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\r\nimport { Repository } from 'typeorm';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { CreateUserDto } from './models/dto/create-user.dto';\r\nimport { UserDto } from './models/dto/user.dto';\r\nimport { UserFactory } from './factory/user.factory';\r\nimport { User } from '../common/interfaces/user.interface';\r\nimport { UserEntity } from './models/user.entity';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n  constructor(\r\n    @InjectRepository(UserEntity)\r\n    private readonly _userRepo: Repository,\r\n    private readonly _userFactory: UserFactory,\r\n  ) {}\r\n  \r\n  /**\r\n   * @return list of all users\r\n   */\r\n  public async findAll(): Promise {\r\n    return await this._userRepo.find();\r\n  }\r\n  \r\n  /**\r\n   * @param id - ID of the user\r\n   * @return the user with ID\r\n   * @throws BadRequestException id is not a number\r\n   * @throws NotFoundException user with ID does not exist\r\n   */\r\n  public async findById(id: number): Promise {\r\n    if (!UsersService.isValidId(id)) {\r\n      throw new BadRequestException('id must be a number');\r\n    }\r\n    const user = await this._userRepo.findOne(id);\r\n    if (!user) {\r\n      throw new NotFoundException(`user with id ${id} does not exist`);\r\n    }\r\n    return user;\r\n  }\r\n  \r\n  /**\r\n   * @param email - E-Mail address of the user\r\n   * @return the user for the email\r\n   * @throws BadRequestException email is null\r\n   * @throws NotFoundException user with email does not exist\r\n   */\r\n  public async findByEmail(email: string): Promise {\r\n    if (email == null) {\r\n      throw new BadRequestException('email must be defined');\r\n    }\r\n    const user = await this._userRepo.findOne({ email });\r\n    if (!user) {\r\n      throw new NotFoundException(`user with email ${email} does not exist`);\r\n    }\r\n    return user;\r\n  }\r\n  \r\n  /**\r\n   * @param id - the user ID\r\n   * @param userData - the updated user data\r\n   * @throws BadRequestException ID is not valid\r\n   * @throws NotFoundException user with ID does not exist\r\n   */\r\n  public async updateUser(id: number, userData: UserDto): Promise {\r\n    if (!UsersService.isValidId(id)) {\r\n      throw new BadRequestException('id must be a number');\r\n    }\r\n    const user = await this._userRepo.findOne(id);\r\n    if (!user) {\r\n      throw new NotFoundException(`user with id ${id} does not exist`);\r\n    }\r\n    user.email = userData.email;\r\n    user.password = userData.password;\r\n    return await this._userRepo.save(user);\r\n  }\r\n  \r\n  /**\r\n   * creates a new user\r\n   * @param userData - the data for the user\r\n   * @throws BadRequestException userData is null\r\n   */\r\n  public async createUser(userData: CreateUserDto): Promise {\r\n    if (!userData) {\r\n      throw new BadRequestException('userData cannot be null');\r\n    }\r\n    const createdUser = this._userFactory.createFromDto(userData);\r\n    return await this.addUser(createdUser);\r\n  }\r\n  \r\n  /**\r\n   * deletes a existing user\r\n   * @param id - ID of the user to be deleted\r\n   * @throws NotFoundException user with ID does not exist\r\n   */\r\n  public async deleteUser(id: number): Promise {\r\n    if (!UsersService.isValidId(id)) {\r\n      throw new BadRequestException('id must be a number');\r\n    }\r\n    const user = await this._userRepo.findOne(id);\r\n    if (!user) {\r\n      throw new NotFoundException(`user with id ${id} does not exist`);\r\n    }\r\n    return await this._userRepo.remove(user);\r\n  }\r\n  \r\n  /**\r\n   * adds a user to the repository\r\n   * @param user - the user to be added\r\n   * @return the created user entity\r\n   */\r\n  public async addUser(user: User): Promise {\r\n    return await this._userRepo.save(user);\r\n  }\r\n  \r\n  /**\r\n   * checks whether the provided id is valid\r\n   * @param id\r\n   * @return whether the id is valid\r\n   */\r\n  private static isValidId(id: number) {\r\n    return id != null && !isNaN(id) && typeof id === 'number';\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/models/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Public email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public password\n                                \n                            \n                            \n                                \n                                    password:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\r\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\r\nimport { Expose } from 'class-transformer';\r\n\r\nexport class CreateUserDto {\r\n  @ApiProperty()\r\n  @IsEmail()\r\n  @IsNotEmpty()\r\n  @Expose()\r\n  public email: string;\r\n\r\n  @ApiProperty()\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  @Expose()\r\n  public password: string;\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/authentication/models/dto/login-user.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Public email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public plainTextPassword\n                                \n                            \n                            \n                                \n                                    plainTextPassword:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\n\r\nexport class LoginUserDto {\r\n  @ApiProperty()\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  public email: string;\r\n  \r\n  @ApiProperty()\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  public plainTextPassword: string;\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/models/dto/user.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Public email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public id\n                                \n                            \n                            \n                                \n                                    id:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public joinDate\n                                \n                            \n                            \n                                \n                                    joinDate:     Date\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public password\n                                \n                            \n                            \n                                \n                                    password:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public role\n                                \n                            \n                            \n                                \n                                    role:     UserRole\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\r\nimport { IsDate, IsEmail, IsEnum, IsNotEmpty, IsNumber, IsString } from 'class-validator';\r\nimport { Expose } from 'class-transformer';\r\nimport { UserRole } from '../../../common/interfaces/user.interface';\r\n\r\nexport class UserDto {\r\n  @ApiProperty()\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  @Expose()\r\n  public id: number;\r\n\r\n  @ApiProperty()\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  @Expose()\r\n  public email: string;\r\n\r\n  @ApiProperty()\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  public password: string;\r\n\r\n  @ApiProperty()\r\n  @IsDate()\r\n  @IsNotEmpty()\r\n  public joinDate: Date;\r\n\r\n  @ApiProperty()\r\n  @IsEnum(UserRole)\r\n  @IsNotEmpty()\r\n  @Expose()\r\n  public role: UserRole;\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/authentication/models/jwt-payload.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserRole\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { UserRole } from '../../common/interfaces/user.interface';\r\n\r\nexport interface JwtPayload {\r\n  userId: number;\r\n  role: UserRole;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/interfaces/user.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        creationDate\n                                    \n                                \n                                \n                                    \n                                        creationDate:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserRole\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export enum UserRole {\r\n  User,\r\n  Moderator,\r\n  Administrator,\r\n}\r\n\r\nexport interface User {\r\n  id: number;\r\n  email: string;\r\n  password: string;\r\n  creationDate: Date;\r\n  role: UserRole;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRequest.html":{"url":"interfaces/UserRequest.html","title":"interface - UserRequest","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  UserRequest\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/authentication/models/user-request.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Request } from 'express';\r\nimport { User } from '../../common/interfaces/user.interface';\r\n\r\nexport interface UserRequest extends Request {\r\n  user: User;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             mockedConfigService\n                        \n                    \n                    \n                        \n                            mockedConfigService:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockedJwtService\n                        \n                    \n                    \n                        \n                            mockedJwtService:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             Roles\n                        \n                    \n                    \n                        \n                            Roles:     \n    \n                        \n                    \n                \n            \n    \n\n    \n        Functions\n            \n                \n                    \n                        \n                             bootstrap\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            bootstrap()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    8%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/middleware/logging.middleware.ts\n            \n            \n                injectable\n            \n            \n                LoggingMiddleware\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/modules/authentication/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                src/modules/authentication/jwt.guard.ts\n            \n            \n                injectable\n            \n            \n                JwtAuthGuard\n            \n            \n                0 %\n                (0/0)\n            \n        \n        \n            \n                src/modules/authentication/jwt.strategy.ts\n            \n            \n                injectable\n            \n            \n                JwtStrategy\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/modules/authentication/models/dto/login-user.dto.ts\n            \n            \n                classe\n            \n            \n                LoginUserDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/modules/authentication/models/jwt-payload.interface.ts\n            \n            \n                interface\n            \n            \n                JwtPayload\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/modules/authentication/models/user-request.interface.ts\n            \n            \n                interface\n            \n            \n                UserRequest\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/modules/authentication/roles.guard.ts\n            \n            \n                injectable\n            \n            \n                RolesGuard\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/modules/common/interfaces/user.interface.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/modules/users/factory/user-dto.factory.ts\n            \n            \n                injectable\n            \n            \n                UserDtoFactory\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/modules/users/factory/user.factory.ts\n            \n            \n                injectable\n            \n            \n                UserFactory\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/modules/users/models/dto/create-user.dto.ts\n            \n            \n                classe\n            \n            \n                CreateUserDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/modules/users/models/dto/user.dto.ts\n            \n            \n                classe\n            \n            \n                UserDto\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/modules/users/users.service.ts\n            \n            \n                injectable\n            \n            \n                UsersService\n            \n            \n                50 %\n                (4/8)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
